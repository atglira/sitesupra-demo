<?php

namespace Doctrine\Tests\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DoctrineTestsModelsECommerceECommerceProductProxy extends \Doctrine\Tests\Models\ECommerce\ECommerceProduct implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister);
            unset($this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function getName()
    {
        $this->_load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->_load();
        return parent::setName($name);
    }

    public function getShipping()
    {
        $this->_load();
        return parent::getShipping();
    }

    public function setShipping(\Doctrine\Tests\Models\ECommerce\ECommerceShipping $shipping)
    {
        $this->_load();
        return parent::setShipping($shipping);
    }

    public function removeShipping()
    {
        $this->_load();
        return parent::removeShipping();
    }

    public function getFeatures()
    {
        $this->_load();
        return parent::getFeatures();
    }

    public function addFeature(\Doctrine\Tests\Models\ECommerce\ECommerceFeature $feature)
    {
        $this->_load();
        return parent::addFeature($feature);
    }

    public function brokenAddFeature(\Doctrine\Tests\Models\ECommerce\ECommerceFeature $feature)
    {
        $this->_load();
        return parent::brokenAddFeature($feature);
    }

    public function removeFeature(\Doctrine\Tests\Models\ECommerce\ECommerceFeature $feature)
    {
        $this->_load();
        return parent::removeFeature($feature);
    }

    public function addCategory(\Doctrine\Tests\Models\ECommerce\ECommerceCategory $category)
    {
        $this->_load();
        return parent::addCategory($category);
    }

    public function removeCategory(\Doctrine\Tests\Models\ECommerce\ECommerceCategory $category)
    {
        $this->_load();
        return parent::removeCategory($category);
    }

    public function getCategories()
    {
        $this->_load();
        return parent::getCategories();
    }

    public function getRelated()
    {
        $this->_load();
        return parent::getRelated();
    }

    public function addRelated(\Doctrine\Tests\Models\ECommerce\ECommerceProduct $related)
    {
        $this->_load();
        return parent::addRelated($related);
    }

    public function removeRelated(\Doctrine\Tests\Models\ECommerce\ECommerceProduct $related)
    {
        $this->_load();
        return parent::removeRelated($related);
    }


    public function __sleep()
    {
        if (!$this->__isInitialized__) {
            throw new \RuntimeException("Not fully loaded proxy can not be serialized.");
        }
        return array('id', 'name', 'shipping', 'features', 'categories', 'related');
    }
}