<?php

namespace Supra\Mailer\MassMail;

require_once dirname(__FILE__) . '/../../../../../../src/lib/Supra/Mailer/MassMail/MassMail.php';

/**
 * Test class for MassMail.
 * Generated by PHPUnit on 2012-01-25 at 13:38:33.
 */
class MassMailTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var MassMail
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new MassMail;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		
	}

	/**
	 * @covers {className}::{origMethodName}
	 * @todo Implement testGetSubscriberListManager().
	 */
	public function testGetSubscriberListManager()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers {className}::{origMethodName}
	 * @todo Implement testGetCampaignManager().
	 */
	public function testGetCampaignManager()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers {className}::{origMethodName}
	 * @todo Implement testGetSendQueueManager().
	 */
	public function testGetSendQueueManager()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers {className}::{origMethodName}
	 * @todo Implement testGetSubscriberManager().
	 */
	public function testGetSubscriberManager()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers {className}::{origMethodName}
	 * @todo Implement testFlush().
	 */
	public function testFlush()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	
	public function testCreateSubscriberListsCampaign(){
		
		$massMail = new MassMail();
		
		//create list
		$list = $massMail->getSubscriberListManager()
				->createList('test list');
		
		//create campaign
		$campaign = $massMail->getCampaignManager()
				->createCampaign('test campaign', $list);
		
		
		$campaign->setSubject('test');
		$campaign->setFromName('test');
		$campaign->setFromEmail('test@test.test');
		$campaign->setReplyTo('test@test.test');
		
		//create subscriber
		$subscriber = $massMail->getSubscriberManager()
				->createSubscriber('test.user@test.test', 'test user', true);
		
		//subscribe to list
		$massMail->getSubscriberManager()
				->addToList($subscriber, $list);
		
		//store data
		$massMail->flush();
		
		//send campaign
		$massMail->populateSendQueue($campaign);
		
		//store data
		$massMail->flush();

		$massMail->getSendQueueManager()->send();
		
		//Drop test data
		$massMail->getCampaignManager()->dropCampaign($campaign);
		$massMail->getSubscriberListManager()->dropList($list);
		$massMail->getSubscriberManager()->dropSubscriber($subscriber);
		
		$massMail->flush();
	}
	
	
}

?>
