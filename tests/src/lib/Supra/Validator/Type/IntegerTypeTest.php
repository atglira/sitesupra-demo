<?php

namespace Supra\Tests\Validator\Type;

use Supra\Validator\Type\IntegerType;

/**
 * Test class for SmallIntType.
 * Generated by PHPUnit on 2011-11-24 at 18:27:56.
 */
class IntegerTypeTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var SmallIntType
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new IntegerType;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		
	}
	
	public function testValidCases()
	{
		$a = '1';
		$this->object->validate($a);
		self::assertSame(1, $a);
		
		$a = '-1';
		$this->object->validate($a);
		self::assertSame(-1, $a);
		
		$a = '2147483647';
		$this->object->validate($a);
		self::assertSame(2147483647, $a);
		
		$a = '-2147483648';
		$this->object->validate($a);
		self::assertSame(-2147483648, $a);
	}
	
	public function testFailingCases()
	{
		try {
			$a = '2147483648';
			$this->object->validate($a);
			self::fail("Should be invalid");
		} catch (\Supra\Validator\Exception\ValidationFailure $e) {}
		
		try {
			$a = '-2147483649';
			$this->object->validate($a);
			self::fail("Should be invalid");
		} catch (\Supra\Validator\Exception\ValidationFailure $e) {}
		
		try {
			$a = '-11474836491';
			$this->object->validate($a);
			self::fail("Should be invalid");
		} catch (\Supra\Validator\Exception\ValidationFailure $e) {}
		
		try {
			$a = '3a';
			$this->object->validate($a);
			self::fail("Should be invalid");
		} catch (\Supra\Validator\Exception\ValidationFailure $e) {}
		
		try {
			$a = '2e1';
			$this->object->validate($a);
			self::fail("Should be invalid");
		} catch (\Supra\Validator\Exception\ValidationFailure $e) {}
	}

}

?>
