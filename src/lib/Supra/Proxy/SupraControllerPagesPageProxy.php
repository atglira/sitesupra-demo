<?php

namespace Supra\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class SupraControllerPagesPageProxy extends \Supra\Controller\Pages\Page implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister);
            unset($this->_identifier);
        }
    }

    
    public function setTemplate(\Supra\Controller\Pages\Template $template)
    {
        $this->_load();
        return parent::setTemplate($template);
    }

    public function getTemplate()
    {
        $this->_load();
        return parent::getTemplate();
    }

    public function getPath()
    {
        $this->_load();
        return parent::getPath();
    }

    public function setParent(\Supra\Controller\Pages\PageAbstraction $page = NULL)
    {
        $this->_load();
        return parent::setParent($page);
    }

    public function setPathPart($pathPart)
    {
        $this->_load();
        return parent::setPathPart($pathPart);
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function getParent()
    {
        $this->_load();
        return parent::getParent();
    }

    public function getChildren()
    {
        $this->_load();
        return parent::getChildren();
    }

    public function getPlaceHolders()
    {
        $this->_load();
        return parent::getPlaceHolders();
    }

    public function getData()
    {
        $this->_load();
        return parent::getData();
    }

    public function setData($locale, \Supra\Controller\Pages\PageDataAbstraction $data)
    {
        $this->_load();
        return parent::setData($locale, $data);
    }

    public function removeData($locale)
    {
        $this->_load();
        return parent::removeData($locale);
    }


    public function __sleep()
    {
        if (!$this->__isInitialized__) {
            throw new \RuntimeException("Not fully loaded proxy can not be serialized.");
        }
        return array('data', 'template', 'path', 'pathPart', 'children', 'parent', 'placeHolders', 'depth', 'id');
    }
}