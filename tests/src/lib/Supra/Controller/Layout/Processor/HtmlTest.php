<?php

namespace Supra\Tests\Controller\Layout\Processor;

use Supra\Tests\Response\ResponseMock;
use Supra\Controller\Layout\Processor\HtmlProcessor;

/**
 * Test class for Html.
 * Generated by PHPUnit on 2010-08-06 at 11:37:10.
 */
class HtmlTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var HtmlProcessor
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new HtmlProcessor;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	/**
	 */
	public function testProcess() {
		$this->object->setLayoutDir(__DIR__ . '/resources');

		$response = new ResponseMock();

		$headerResponse = new ResponseMock();
		$headerResponse->output('A');

		$mainResponse = new ResponseMock();
		$mainResponse->output('B');

		$footerResponse = new ResponseMock();
		$footerResponse->output('C');

		$placeResponses = array(
			'header' => $headerResponse,
			'main' => $mainResponse,
			'footer' => $footerResponse,
		);

		$this->object->process($response, $placeResponses, 'layout.html');

		$output = $response->flush();

		self::assertEquals(\file_get_contents(__DIR__ . '/resources/expected.html'), $output);
	}

	/**
	 */
	public function testGetPlaces() {
		$this->object->setLayoutDir(__DIR__ . '/resources');
		$places = $this->object->getPlaces('layout.html');
		self::assertEquals(array('header', 'main', 'footer'), $places);
	}

	/**
	 */
	public function testGetLayoutDir() {
		$this->object->setLayoutDir(__DIR__);
		self::assertEquals(__DIR__, $this->object->getLayoutDir());
	}

	/**
	 */
	public function testGetStartDelimiter() {
		self::assertEquals('<!--', $this->object->getStartDelimiter());
	}

	/**
	 */
	public function testSetStartDelimiter() {
		$this->object->setStartDelimiter('xxx');
		self::assertEquals('xxx', $this->object->getStartDelimiter());
	}

	/**
	 */
	public function testGetEndDelimiter() {
		self::assertEquals('-->', $this->object->getEndDelimiter());
	}

	/**
	 */
	public function testSetEndDelimiter() {
		$this->object->setEndDelimiter('xxx');
		self::assertEquals('xxx', $this->object->getEndDelimiter());
	}

}
