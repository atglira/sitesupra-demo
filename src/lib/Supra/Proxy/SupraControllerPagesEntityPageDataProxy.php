<?php

namespace Supra\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class SupraControllerPagesEntityPageDataProxy extends \Supra\Controller\Pages\Entity\PageData implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister);
            unset($this->_identifier);
        }
    }

    
    public function setPage(\Supra\Controller\Pages\Entity\Page $page)
    {
        $this->_load();
        return parent::setPage($page);
    }

    public function setMaster(\Supra\Controller\Pages\Entity\Abstraction\Page $master)
    {
        $this->_load();
        return parent::setMaster($master);
    }

    public function getPage()
    {
        $this->_load();
        return parent::getPage();
    }

    public function getPath()
    {
        $this->_load();
        return parent::getPath();
    }

    public function setPathPart($pathPart)
    {
        $this->_load();
        return parent::setPathPart($pathPart);
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setLocale($locale)
    {
        $this->_load();
        return parent::setLocale($locale);
    }

    public function getLocale()
    {
        $this->_load();
        return parent::getLocale();
    }

    public function setTitle($title)
    {
        $this->_load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->_load();
        return parent::getTitle();
    }

    public function getProperty($name)
    {
        $this->_load();
        return parent::getProperty($name);
    }


    public function __sleep()
    {
        if (!$this->__isInitialized__) {
            throw new \RuntimeException("Not fully loaded proxy can not be serialized.");
        }
        return array('id', 'locale', 'title', 'page', 'path', 'pathPart');
    }
}