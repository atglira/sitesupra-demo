{% import _self as gallery %}

{% set slides = items %}
{% set columns  = supraBlock.property('columns') %}
{% set column_count = 1 %}

{% if columns == 'columns_2' %}
	{% set column_count = 2 %}
{% elseif columns == 'columns_3' %}
	{% set column_count = 3 %}
{% elseif columns == 'columns_4' %}
	{% set column_count = 4 %}
{% endif %}

{% if slides or supra.cmsRequest %}
	
	<div class="block gallery {% if columns == 'columns_1' %}gallery-slideshow{% else %}gallery-grid{% endif %}" data-refresh-event="gallery">
	
	{# Heading #}
	{% set heading_class = 'no-heading' %}
	{% set title_empty = supraBlock.isEmpty('block_title') %}
	{% if supra.cmsRequest or not title_empty %}
	<h2 class="block-title {% if title_empty %}hidden{% endif %}"><div>
		{{ supraBlock.property('block_title') }}
		{% if not title_empty %}
			{% set heading_class = 'has-heading' %}
		{% endif %}
	</div></h2>
	{% endif %}
	
	{% if columns == 'columns_1' %}
		{#
			Items are displayed as slideshow
		#}
		{% set expectedWidth = 940 %}
		
		<div class="gallery-inner promo-slider {{ heading_class }}" data-refresh-event="promo" data-style="thumbs-outer" data-animation="horizontal">
			<ul data-supra-container="true" data-supra-image-selector="img" class="clearfix">
				{% if slides %}
				
					{% for slide in slides %}
						{% if slide['link'] and slide['link'].href %}
							{% set link = {
								'href': slide['link'].href,
								'target': slide['link'].target,
								'title': slide['link'].title
							} %}
						{% else %}
							{% set link = false %}
						{% endif %}
						{% set property = {
							'first': false,
							'last': false,
							'image': gallery.media(slide['image'] | default(''), expectedWidth),
							'video': gallery.media(slide['video'] | default (''), expectedWidth),
							'image_raw': slide['image'] | default(''),
							'video_raw': slide['video'] | default(''), 
							'title': slide['title'] | default(''),
							'text': slide['text'] | default(''),
							'link_title': slide['link_title'] | default(''),
							'link': link
						} %}
						
						{# WORKAROUND FOR MISSING "layout" property #}
						{% if slide.image is defined and slide.image is not empty %}
							{% set defaultLayout = 'image' %}
						{% elseif slide.video is defined and slide.video is not empty %}
							{% set defaultLayout = 'video' %}
						{% else %}
							{% set defaultLayout = 'text' %}
						{% endif %}
					
						{% set layout = slide.layout | default (defaultLayout) %}
						
						{% include 'templates/' ~ layout ~ '.html.twig' %}
					{% endfor %}
					
				{% endif %}
			</ul>
		</div>
	{% else %}
		{#
		    Items are displayed in a grid, 3 in a row
		#}
		{% set expectedWidth = 300 %}
		
		<div class="gallery-inner {{ columns }}">
			<ul data-supra-container="true" class="clearfix">
				{% if slides %}
				
					{% for slide in slides %}
						{% set first = true %}{% if loop.index0 % column_count %}{% set first = false %}{% endif %}
						{% set last  = false %}{% if (loop.index0 % column_count) == (column_count - 1) %}{% set last = true %}{% endif %}
						
						{% set property = {
							'first': first,
							'last':  last,
							'image': gallery.media(slide['image'] | default(''), expectedWidth),
							'video': gallery.media(slide['video'] | default (''), expectedWidth),
							'image_raw': slide['image'] | default(''),
							'video_raw': slide['video'] | default(''), 
							'title': slide['title'] | default(''),
							'text': slide['text'] | default(''),
							'link_title': slide['link_title'] | default(''),
							'link': slide['link'] | default('')
						} %}
						
						{# WORKAROUND FOR MISSING "layout" property #}
						{% if slide.image is defined and slide.image is not empty %}
							{% set defaultLayout = 'image' %}
						{% elseif slide.video is defined and slide.video is not empty %}
							{% set defaultLayout = 'video' %}
						{% else %}
							{% set defaultLayout = 'text' %}
						{% endif %}
					
						{% set layout = slide.layout | default (defaultLayout) %}
						
						{% include 'templates/' ~ layout ~ '.html.twig' %}
						{% if last %}<li class="clear"></li>{% endif %}
					{% endfor %}
					
				{% endif %}
			</ul>
		</div>
	{% endif %}
	</div>
	
{% endif %}

{% macro media(mediaData, expectedWidth) %}
{% spaceless %}
	{% if mediaData is not empty %}
		
		{# Image and video "perfect" ratio #}
		{% set ratio = 16/9 %}
		
		{% if mediaData.type == 'image' %}
			{#
			{{ supraBlock.imageHtmlTag(mediaData.id, mediaData.size_width, mediaData.size_height, true, mediaData.size_name) | raw }}
			#}
			
			{% set width = image.crop_width %}
			{% set height = image.crop_height %}
			
			{% set tag = supraBlock.imageHtmlTag( mediaData.id, width, height, true, mediaData.size_name )|raw %}
			{% set width = tag.getAttribute('width') %}
			{% set height = tag.getAttribute('height') %}
	
			{% if width or height %}
				{% set ratio = width / height %}
				
				{% if expectedWidth > 420 and width < 748 %}
					{# <!-- Larger image for tablet when in slideshow --> #}
					{% set tag_tablet = supraBlock.imageHtmlTag( mediaData.id, 748, 748 / ratio, true )|raw %}
				{% endif %}
	
				{% if width < 420 %}
					{# <!-- Larger image for table and mobile --> #}
					{% set tag_mobile = supraBlock.imageHtmlTag( mediaData.id, 420, 420 / ratio, true )|raw %}
				{% endif %}
				
				<img src="{{ tag.getAttribute('src') }}" height="{{ height }}" {% if tag_tablet or tag_mobile %}
					 data-src-desktop="{{ tag.getAttribute('src') }}" data-height-desktop="{{ height }}"
					 {% if tag_tablet %}
					 	data-src-tablet="{{ tag_tablet.getAttribute('src') }}" data-height-tablet="{{ tag_tablet.getAttribute('height') }}"
					 {% endif %}
					 {% if tag_mobile %}
					 	data-src-mobile-all="{{ tag_mobile.getAttribute('src') }}" data-height-mobile-all="{{ tag_mobile.getAttribute('height') }}"
					 {% endif %}
				 	 class="responsive"
					 {% endif %}alt="" />
			{% endif %}
			
		{% elseif mediaData.type == 'video' %}
			{% set video = mediaData %}

			{# Default width and height, resizing is done by javascript #}
			{% set width = expectedWidth %}
			{% set height = width/ratio %}

			{% if video.resource == 'source' %}
				{# HTML #}
				<div class="video" data-attach="$.fn.resize">
					{% if video.source_type == 'iframe' %}
						<iframe src="{{ video.src }}" width="{{ video.width }}" height="{{ video.height }}" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
					{% elseif video.source_type == 'embed' %}
						<object width="{{ video.width }}" height="{{ video.height }}">
							<param name="movie" value="{{ video.src }} "></param>
							<param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param>
							<embed{% if supra.isCmsRequest %} wmode="opaque"{%endif%} src="{{ video.src }}" type="application/x-shockwave-flash" width="{{ video.width }}" height="{{ video.height }}" allowscriptaccess="always" allowfullscreen="true"></embed>
						</object>
					{% endif %}
				</div>

			{% elseif video.resource == 'link' and video.id %}
				{% if video.service == 'youtube' %}
					<div class="video" data-attach="$.fn.resize">
						<iframe src="http://www.youtube.com/embed/{{ video.id }}?hd=1&wmode=opaque&controls=1&showinfo=0;rel=0" width="{{ width }}" height="{{ height|number_format }}" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
					</div>
				{% elseif video.service == 'vimeo' %}
					<div class="video" data-attach="$.fn.resize">
						{% set player_id = random() %}
						<iframe src="http://player.vimeo.com/video/{{ video.id }}?title=0&amp;byline=0&amp;portrait=0&amp;color=0&amp;api=1&player_id=player{{ player_id }}" id="player{{ player_id }}" width="{{ width }}" height="{{ height|number_format }}" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
					</div>
				{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}
{% endspaceless %}
{% endmacro %}